/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ContractProxy, ContractProxyInterface } from "../ContractProxy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "Deploy",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_code",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "_salt",
        type: "bytes32",
      },
    ],
    name: "deploy2",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061036f806100206000396000f3fe6080604052600436106100285760003560e01c80627743601461002d578063c706c29414610049575b600080fd5b61004760048036038101906100429190610188565b610065565b005b610063600480360381019061005e91906101c9565b6100b7565b005b600081516020830134f09050803b61007c57600080fd5b7f55ea6c6b31543d8e2ec6a72f71a79c0f4b72ed0d4757172b043d8f4f4cd84848816040516100ab919061022c565b60405180910390a15050565b60008183516020850134f59050803b6100cf57600080fd5b7f55ea6c6b31543d8e2ec6a72f71a79c0f4b72ed0d4757172b043d8f4f4cd84848816040516100fe919061022c565b60405180910390a1505050565b600061011e61011984610278565b610247565b90508281526020810184848401111561013657600080fd5b6101418482856102e4565b509392505050565b60008135905061015881610322565b92915050565b600082601f83011261016f57600080fd5b813561017f84826020860161010b565b91505092915050565b60006020828403121561019a57600080fd5b600082013567ffffffffffffffff8111156101b457600080fd5b6101c08482850161015e565b91505092915050565b600080604083850312156101dc57600080fd5b600083013567ffffffffffffffff8111156101f657600080fd5b6102028582860161015e565b925050602061021385828601610149565b9150509250929050565b610226816102a8565b82525050565b6000602082019050610241600083018461021d565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561026e5761026d6102f3565b5b8060405250919050565b600067ffffffffffffffff821115610293576102926102f3565b5b601f19601f8301169050602081019050919050565b60006102b3826102c4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61032b816102ba565b811461033657600080fd5b5056fea2646970667358221220c4d43e02e7fb24d93469e6a255066f4d75c2735d37a1bcefba0eda5b020cf2ac64736f6c63430008000033";

export class ContractProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractProxy> {
    return super.deploy(overrides || {}) as Promise<ContractProxy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractProxy {
    return super.attach(address) as ContractProxy;
  }
  connect(signer: Signer): ContractProxy__factory {
    return super.connect(signer) as ContractProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractProxyInterface {
    return new utils.Interface(_abi) as ContractProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractProxy {
    return new Contract(address, _abi, signerOrProvider) as ContractProxy;
  }
}
