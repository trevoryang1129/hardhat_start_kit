/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SignedConsumerTyped,
  SignedConsumerTypedInterface,
} from "../SignedConsumerTyped";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "PRBMathSD59x18__LogInputTooSmall",
    type: "error",
  },
  {
    inputs: [],
    name: "PRBMathSD59x18__MulInputTooSmall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rAbs",
        type: "uint256",
      },
    ],
    name: "PRBMathSD59x18__MulOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "prod1",
        type: "uint256",
      },
    ],
    name: "PRBMath__MulDivFixedPointOverflow",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
    ],
    name: "signedLog2",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "x",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "y",
        type: "int256",
      },
    ],
    name: "signedMul",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "principal",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "apr",
        type: "int256",
      },
    ],
    name: "signedYield",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108f1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063048236d7146100465780638c737efb14610076578063bb621113146100a6575b600080fd5b610060600480360381019061005b919061077b565b6100d6565b60405161006d91906107d5565b60405180910390f35b610090600480360381019061008b9190610752565b61011e565b60405161009d91906107d5565b60405180910390f35b6100c060048036038101906100bb919061077b565b610147565b6040516100cd91906107d5565b60405180910390f35b600080604051806020016040528085815250905060006040518060200160405280858152509050610110818361018f90919063ffffffff16565b600001519250505092915050565b600080604051806020016040528084815250905061013b81610314565b60000151915050919050565b600080604051806020016040528085815250905060006040518060200160405280858152509050610181818361018f90919063ffffffff16565b600001519250505092915050565b61019761072a565b6000836000015190506000836000015190507f80000000000000000000000000000000000000000000000000000000000000008214806101f657507f800000000000000000000000000000000000000000000000000000000000000081145b1561022d576040517f3406846c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806000841261023e5783610243565b836000035b9150600083126102535782610258565b826000035b9050600061026683836104ef565b90507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111156102cd57806040517fbf79e8d90000000000000000000000000000000000000000000000000000000081526004016102c491906107f0565b60405180910390fd5b60008060016000038713915060016000038613905060405180602001604052806001838518146102fd5784610302565b846000035b81525097505050505050505092915050565b61031c61072a565b6000826000015190506000811361036a57806040517f613f4fba00000000000000000000000000000000000000000000000000000000815260040161036191906107d5565b60405180910390fd5b6000670de0b6b3a7640000821261038457600190506103bc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9050816ec097ce7bc90715b34b9f10000000000491505b6000610405670de0b6b3a764000084816103ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b05610613565b90506000670de0b6b3a76400008202905060008285901d9050670de0b6b3a764000081141561044b576040518060200160405280858402815250955050505050506104ea565b60006706f05b59d3b2000090505b60008113156104d057670de0b6b3a7640000828302816104a2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b059150670de0b6b3a764000060020282126104c4578083019250600182901d91505b600181901d9050610459565b506040518060200160405280858402815250955050505050505b919050565b60008060008019848609848602925082811083820303915050670de0b6b3a7640000811061055457806040517fd31b340200000000000000000000000000000000000000000000000000000000815260040161054b91906107f0565b60405180910390fd5b600080670de0b6b3a764000086880991506706f05b59d3b1ffff8211905060008314156105c75780670de0b6b3a764000085816105ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b040194505050505061060d565b807faccb18165bd6fe31ae1cf318dc5b51eee0e1ba569b88cd74c1773b91fac1066960016204000080600003040186851186030262040000858803041702019450505050505b92915050565b6000700100000000000000000000000000000000821061064457608082901c9150608081610641919061080b565b90505b68010000000000000000821061066b57604082901c9150604081610668919061080b565b90505b640100000000821061068e57602082901c915060208161068b919061080b565b90505b6201000082106106af57601082901c91506010816106ac919061080b565b90505b61010082106106cf57600882901c91506008816106cc919061080b565b90505b601082106106ee57600482901c91506004816106eb919061080b565b90505b6004821061070d57600282901c915060028161070a919061080b565b90505b6002821061072557600181610722919061080b565b90505b919050565b6040518060200160405280600081525090565b60008135905061074c816108a4565b92915050565b60006020828403121561076457600080fd5b60006107728482850161073d565b91505092915050565b6000806040838503121561078e57600080fd5b600061079c8582860161073d565b92505060206107ad8582860161073d565b9150509250929050565b6107c081610861565b82525050565b6107cf8161086b565b82525050565b60006020820190506107ea60008301846107b7565b92915050565b600060208201905061080560008301846107c6565b92915050565b60006108168261086b565b91506108218361086b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561085657610855610875565b5b828201905092915050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6108ad81610861565b81146108b857600080fd5b5056fea26469706673582212204e72d25483b41cceaf470bdab95c1b08160ab6ec354d4207ef9323a35d1cd52c64736f6c63430008040033";

export class SignedConsumerTyped__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SignedConsumerTyped> {
    return super.deploy(overrides || {}) as Promise<SignedConsumerTyped>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SignedConsumerTyped {
    return super.attach(address) as SignedConsumerTyped;
  }
  connect(signer: Signer): SignedConsumerTyped__factory {
    return super.connect(signer) as SignedConsumerTyped__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SignedConsumerTypedInterface {
    return new utils.Interface(_abi) as SignedConsumerTypedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SignedConsumerTyped {
    return new Contract(address, _abi, signerOrProvider) as SignedConsumerTyped;
  }
}
