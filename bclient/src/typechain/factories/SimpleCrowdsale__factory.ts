/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SimpleCrowdsale,
  SimpleCrowdsaleInterface,
} from "../SimpleCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fundingGoalInEthers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "durationInDays",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_backer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_isContribution",
        type: "bool",
      },
    ],
    name: "FundTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amountRaised",
        type: "uint256",
      },
    ],
    name: "GoalReached",
    type: "event",
  },
  {
    inputs: [],
    name: "amountRaised",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beneficiary",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "checkGoalReached",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "crowdsaleClosed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingGoal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundingGoalReached",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "fundingList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeWithdrawal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040526000600560006101000a81548160ff0219169083151502179055506000600560016101000a81548160ff0219169083151502179055503480156200004757600080fd5b50604051620016003803806200160083398181016040528101906200006d91906200021b565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050670de0b6b3a764000083620000ba9190620002fa565b600181905550603c82620000cf9190620002fa565b42620000dc91906200029d565b6003819055506706f05b59d3b20000600481905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200017857600080fd5b505afa1580156200018d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b3919062000271565b600060146101000a81548160ff021916908360ff16021790555050505062000423565b600081519050620001e781620003d5565b92915050565b600081519050620001fe81620003ef565b92915050565b600081519050620002158162000409565b92915050565b6000806000606084860312156200023157600080fd5b60006200024186828701620001ed565b93505060206200025486828701620001ed565b92505060406200026786828701620001d6565b9150509250925092565b6000602082840312156200028457600080fd5b6000620002948482850162000204565b91505092915050565b6000620002aa826200038f565b9150620002b7836200038f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620002ef57620002ee620003a6565b5b828201905092915050565b600062000307826200038f565b915062000314836200038f565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161562000350576200034f620003a6565b5b828202905092915050565b600062000368826200036f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b620003e0816200035b565b8114620003ec57600080fd5b50565b620003fa816200038f565b81146200040657600080fd5b50565b620004148162000399565b81146200042057600080fd5b50565b60805160601c6111a26200045e600039600081816106ce0152818161077f0152818161097a015281816109b80152610a4201526111a26000f3fe6080604052600436106100e15760003560e01c8063a035b1fe1161007f578063d424f62811610059578063d424f62814610280578063e3d670d7146102ab578063fc0c546a146102e8578063fd6b7ef814610313576100f0565b8063a035b1fe14610220578063a48217191461024b578063ccb07cef14610255576100f0565b8063313ce567116100bb578063313ce5671461017457806338af3eed1461019f5780637a3a0e84146101ca5780637b3e5e7b146101f5576100f0565b806301cb3b20146100f5578063039be5581461010c57806329dcb0cf14610149576100f0565b366100f0576100ee61031d565b005b600080fd5b34801561010157600080fd5b5061010a61067c565b005b34801561011857600080fd5b50610133600480360381019061012e9190610b64565b610725565b6040516101409190610cd8565b60405180910390f35b34801561015557600080fd5b5061015e610764565b60405161016b9190610dce565b60405180910390f35b34801561018057600080fd5b5061018961076a565b6040516101969190610de9565b60405180910390f35b3480156101ab57600080fd5b506101b461077d565b6040516101c19190610cd8565b60405180910390f35b3480156101d657600080fd5b506101df6107a1565b6040516101ec9190610dce565b60405180910390f35b34801561020157600080fd5b5061020a6107a7565b6040516102179190610dce565b60405180910390f35b34801561022c57600080fd5b506102356107ad565b6040516102429190610dce565b60405180910390f35b61025361031d565b005b34801561026157600080fd5b5061026a6107b3565b6040516102779190610d53565b60405180910390f35b34801561028c57600080fd5b506102956107c6565b6040516102a29190610d53565b60405180910390f35b3480156102b757600080fd5b506102d260048036038101906102cd9190610b12565b6107d9565b6040516102df9190610dce565b60405180910390f35b3480156102f457600080fd5b506102fd6107f1565b60405161030a9190610cd8565b60405180910390f35b61031b610815565b005b600560019054906101000a900460ff161561036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036490610d8e565b60405180910390fd5b600034905060008060149054906101000a900460ff1660ff16600a6103929190610eef565b600454836103a09190610e6b565b6103aa919061100d565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050818173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161040c9190610cd8565b60206040518083038186803b15801561042457600080fd5b505afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610b8d565b101561049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049490610dae565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016104d8929190610cf3565b602060405180830381600087803b1580156104f257600080fd5b505af1158015610506573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052a9190610b3b565b610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056090610d6e565b60405180910390fd5b82600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105b89190610e15565b9250508190555082600260008282546105d19190610e15565b925050819055506007339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf63384600160405161066f93929190610d1c565b60405180910390a1505050565b60035442106107235760015460025410610707576001600560006101000a81548160ff0219169083151502179055507fec3f991caf7857d61663fd1bba1739e04abd4781238508cde554bb849d790c857f00000000000000000000000000000000000000000000000000000000000000006002546040516106fe929190610cf3565b60405180910390a15b6001600560016101000a81548160ff0219169083151502179055505b565b6007818154811061073557600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600060149054906101000a900460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60015481565b60025481565b60045481565b600560019054906101000a900460ff1681565b600560009054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003544210610abc57600560009054906101000a900460ff1661094a576000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610948573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156108c5573d6000803e3d6000fd5b507fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf6338260006040516108fa93929190610d1c565b60405180910390a16000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b505b600560009054906101000a900460ff1680156109b157503373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16145b15610abb577f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015610a1e573d6000803e3d6000fd5b507fe842aea7a5f1b01049d752008c53c52890b1a6daf660cf39e8eec506112bbdf67f0000000000000000000000000000000000000000000000000000000000000000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546000604051610ab293929190610d1c565b60405180910390a15b5b565b600081359050610acd81611127565b92915050565b600081519050610ae28161113e565b92915050565b600081359050610af781611155565b92915050565b600081519050610b0c81611155565b92915050565b600060208284031215610b2457600080fd5b6000610b3284828501610abe565b91505092915050565b600060208284031215610b4d57600080fd5b6000610b5b84828501610ad3565b91505092915050565b600060208284031215610b7657600080fd5b6000610b8484828501610ae8565b91505092915050565b600060208284031215610b9f57600080fd5b6000610bad84828501610afd565b91505092915050565b610bbf81611067565b82525050565b610bce81611079565b82525050565b6000610be1601583610e04565b91507f546f6b656e207472616e73666572206661696c656400000000000000000000006000830152602082019050919050565b6000610c21601183610e04565b91507f43726f776473616c6520636c6f736565640000000000000000000000000000006000830152602082019050919050565b6000610c61602b83610e04565b91507f43726f7773616c6520636f6e747261637420746f6b656e20616d6f756e74206960008301527f6e73756666696369656e740000000000000000000000000000000000000000006020830152604082019050919050565b610cc3816110a5565b82525050565b610cd2816110af565b82525050565b6000602082019050610ced6000830184610bb6565b92915050565b6000604082019050610d086000830185610bb6565b610d156020830184610cba565b9392505050565b6000606082019050610d316000830186610bb6565b610d3e6020830185610cba565b610d4b6040830184610bc5565b949350505050565b6000602082019050610d686000830184610bc5565b92915050565b60006020820190508181036000830152610d8781610bd4565b9050919050565b60006020820190508181036000830152610da781610c14565b9050919050565b60006020820190508181036000830152610dc781610c54565b9050919050565b6000602082019050610de36000830184610cba565b92915050565b6000602082019050610dfe6000830184610cc9565b92915050565b600082825260208201905092915050565b6000610e20826110a5565b9150610e2b836110a5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e6057610e5f6110bc565b5b828201905092915050565b6000610e76826110a5565b9150610e81836110a5565b925082610e9157610e906110eb565b5b828204905092915050565b6000808291508390505b6001851115610ee657808604811115610ec257610ec16110bc565b5b6001851615610ed15780820291505b8081029050610edf8561111a565b9450610ea6565b94509492505050565b6000610efa826110a5565b9150610f05836110a5565b9250610f327fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610f3a565b905092915050565b600082610f4a5760019050611006565b81610f585760009050611006565b8160018114610f6e5760028114610f7857610fa7565b6001915050611006565b60ff841115610f8a57610f896110bc565b5b8360020a915084821115610fa157610fa06110bc565b5b50611006565b5060208310610133831016604e8410600b8410161715610fdc5782820a905083811115610fd757610fd66110bc565b5b611006565b610fe98484846001610e9c565b9250905081840481111561100057610fff6110bc565b5b81810290505b9392505050565b6000611018826110a5565b9150611023836110a5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561105c5761105b6110bc565b5b828202905092915050565b600061107282611085565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b61113081611067565b811461113b57600080fd5b50565b61114781611079565b811461115257600080fd5b50565b61115e816110a5565b811461116957600080fd5b5056fea26469706673582212202741f851f7da2ac05ee2b3dbd26bad75f1e28bff8bc03f3e0b234849a718191c64736f6c63430008000033";

export class SimpleCrowdsale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    fundingGoalInEthers: BigNumberish,
    durationInDays: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleCrowdsale> {
    return super.deploy(
      fundingGoalInEthers,
      durationInDays,
      _token,
      overrides || {}
    ) as Promise<SimpleCrowdsale>;
  }
  getDeployTransaction(
    fundingGoalInEthers: BigNumberish,
    durationInDays: BigNumberish,
    _token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      fundingGoalInEthers,
      durationInDays,
      _token,
      overrides || {}
    );
  }
  attach(address: string): SimpleCrowdsale {
    return super.attach(address) as SimpleCrowdsale;
  }
  connect(signer: Signer): SimpleCrowdsale__factory {
    return super.connect(signer) as SimpleCrowdsale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleCrowdsaleInterface {
    return new utils.Interface(_abi) as SimpleCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleCrowdsale {
    return new Contract(address, _abi, signerOrProvider) as SimpleCrowdsale;
  }
}
